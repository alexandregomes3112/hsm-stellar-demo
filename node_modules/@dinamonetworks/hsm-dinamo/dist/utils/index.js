"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Aap = exports.Logger = void 0;
exports.isHashKeyNull = isHashKeyNull;
exports.isHex = isHex;
const logger_1 = __importDefault(require("./logger"));
exports.Logger = logger_1.default;
const aap_1 = __importDefault(require("./aap"));
exports.Aap = aap_1.default;
const enums_1 = require("../hsm/enums");
/**
 * @internal
 * Check if hash algorithm is not a HMAC algorithm
 * @param {HASH_ALGORITHMS} hashAlgorithm - Hash algorithm
 * @returns {boolean} True if hash algorithm is not a HMAC algorithm
 */
function isHashKeyNull(hashAlgorithm) {
    return [
        enums_1.HASH_ALGORITHMS.ALG_MD5,
        enums_1.HASH_ALGORITHMS.ALG_SHA1,
        enums_1.HASH_ALGORITHMS.ALG_SSL_SHA1_MD5,
        enums_1.HASH_ALGORITHMS.ALG_SHA2_224,
        enums_1.HASH_ALGORITHMS.ALG_SHA2_256,
        enums_1.HASH_ALGORITHMS.ALG_SHA2_384,
        enums_1.HASH_ALGORITHMS.ALG_SHA2_512,
        enums_1.HASH_ALGORITHMS.ALG_SHA3_224,
        enums_1.HASH_ALGORITHMS.ALG_SHA3_256,
        enums_1.HASH_ALGORITHMS.ALG_SHA3_384,
        enums_1.HASH_ALGORITHMS.ALG_SHA3_512,
    ]
        .includes(hashAlgorithm);
}
function isHex(str) {
    return /^[0-9A-F]+$/i.test(str);
}
