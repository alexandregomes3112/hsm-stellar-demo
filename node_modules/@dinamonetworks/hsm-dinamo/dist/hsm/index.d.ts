import "crypto";
import * as constants from "./constants";
import * as exceptions from "./exceptions";
import * as interfaces from "./interfaces";
import * as enums from "./enums";
import * as types from "./types";
/**
 * Inicializa a conexão com o HSM
 * @param {interfaces.session.HsmOptions} options - Opções de configuração do HSM
 * @param {interfaces.session.tlsOptions} tlsOptions - Opções para configurar conexão tls
 * @returns {Promise<HSM>} - Instância do client com a conexão estabelecida
 * @throws {@link exceptions.HsmError} - Alguma opção de configuração não foi especificada ou está incorreta
 * @throws {@link exceptions.ConnectionError} - Não foi possível estabelecer a conexão com o HSM
 * @throws {@link exceptions.HsmError} - Erro genérico do HSM
 * @see Código de exemplo: [Conectando-se ao HSM](<../../pages/Conectando-se ao HSM.md>)
 * @see Código de exemplo: [Usando token de acesso](<../../pages/Usando token de acesso.md>)
 */
declare function connect(options?: interfaces.session.HsmOptions, tlsOptions?: interfaces.session.TlsOptions): Promise<interfaces.Hsm>;
/**
 * Fechar a conexão com o HSM
 */
declare function disconnect(): Promise<boolean>;
export { connect, disconnect, interfaces, exceptions, constants, enums, types };
