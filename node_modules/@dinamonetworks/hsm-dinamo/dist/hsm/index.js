"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.types = exports.enums = exports.constants = exports.exceptions = exports.interfaces = void 0;
exports.connect = connect;
exports.disconnect = disconnect;
require("crypto");
const constants = __importStar(require("./constants"));
exports.constants = constants;
const exceptions = __importStar(require("./exceptions"));
exports.exceptions = exceptions;
const interfaces = __importStar(require("./interfaces"));
exports.interfaces = interfaces;
const enums = __importStar(require("./enums"));
exports.enums = enums;
const hsm_1 = __importDefault(require("./hsm"));
const types = __importStar(require("./types"));
exports.types = types;
/**
 * Inicializa a conexão com o HSM
 * @param {interfaces.session.HsmOptions} options - Opções de configuração do HSM
 * @param {interfaces.session.tlsOptions} tlsOptions - Opções para configurar conexão tls
 * @returns {Promise<HSM>} - Instância do client com a conexão estabelecida
 * @throws {@link exceptions.HsmError} - Alguma opção de configuração não foi especificada ou está incorreta
 * @throws {@link exceptions.ConnectionError} - Não foi possível estabelecer a conexão com o HSM
 * @throws {@link exceptions.HsmError} - Erro genérico do HSM
 * @see Código de exemplo: [Conectando-se ao HSM](<../../pages/Conectando-se ao HSM.md>)
 * @see Código de exemplo: [Usando token de acesso](<../../pages/Usando token de acesso.md>)
 */
function connect(options, tlsOptions) {
    return hsm_1.default.connect(options, tlsOptions);
}
/**
 * Fechar a conexão com o HSM
 */
function disconnect() {
    throw new Error("Deprecated function: Please use the disconnect() method from the HSM instance.");
}
