export default interface Ocra {
    /**
     * OCRA: OATH Challenge-Response Algorithm
     *
     * Gera um Challenge-response baseado em OCRA: OATH Challenge-Response Algorithm.
     * @param {string} sk - Chave criptográfica compartilhada por ambas as partes.
     * @param {string} q - Desafio compartilhado entre as partes codificada em hexadecimal.
     * @param {string} suite - String contendo o valor que representa a suite de operações para calcular uma resposta OCRA.
     * @param {number} len Tamanho do csp de saída, os valores devem estar no intervalo de 6 à 8.
     * @param {bigint} c Contador sincronizado entre as partes.
     * @param {string} ph String que contém um hash conhecido entre as partes durante a execução do algoritmo.
     * @param {string} s Conjunto de strings que contem informações sobre a sessão em encoding ascii.
     * @param {bigint} ts - Número de intervalos de tempo (segundos, minutos, horas ou dias, dependendo da granularidade especificada) desde a meia-noite UTC de 1º de janeiro de 1970 [UT].
     * @returns {Promise<Buffer>} Retorna um parâmetro crítico de segurança com tamnho informado em P.
     * @throws {exceptions.InvalidParameterError} Caso seja informado parãmetro inválido.
     * @throws {exceptions.HsmError} Caso o hsm retorne erro.
     * @see Código de exemplo: [Criando um One Time Password (OTP) com função OCRA](<../../../../pages/Criando um One Time Password (OTP) com função OCRA.md>)
     */
    ocraGen(sk: string, q: string, suite: string, len: number | null, c?: bigint | null, ph?: string | null, s?: string | null, ts?: bigint | null): Promise<string>;
}
